---
title: "Users"
---

## How to install a package from R-releases

To use packages from R-releases, simply add it to your repository settings:

```r
options(repos = c("https://r-releases.r-universe.dev", getOption("repos")))
```

The R language natively supports multiple repositories as a core feature, and the above only needs to be run once per session. We recommend adding it to your `.Rprofile` so that it is always available.

Alternatively, to only fetch packages from R-universe that are not on CRAN:

```r
options(repos = c(getOption("repos"), "https://r-releases.r-universe.dev"))
```

Then proceed to use `install.packages()` as you would normally.

## Ensuring your package is always available

R-releases is designed to work seamlessly alongside CRAN. By prioritizing CRAN in the settings above, you can always be sure that you get your packages from CRAN (if you prefer), only using R-releases as a fall-back.

For any number of possible reasons, a package may become unavailable on CRAN at any time due to its strict archival policy. 

- Often due to archival of a strong dependency - which automatically archives all of its reverse depedencies at short notice - and is outside of the maintainer's control.
- Situations are often temporary, but may take an extended time to resolve.

By [contributing](contributors.html) a package that you rely on to R-releases, you can ensure that it remains available for your critical workflows.

## Providing updates direct from maintainers

Some maintainers actively use R-releases as a faster release channel, especially for packages under active and intensive development. CRAN is an archival network first and foremost, and its policy restricts the frequency of package updates.

In such cases, newer package versions containing critical updates or bug fixes may be made available on R-releases at an earlier time.

If a package maintainer recommends you to install a package from R-releases, please prioritize R-releases in front of CRAN in the repository settings above.
